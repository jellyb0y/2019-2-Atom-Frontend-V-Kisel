{"version":3,"sources":["static/styles/Main.module.css","static/styles/SearchFor.module.css","static/styles/City.module.css","constants/helperConstant.js","components/WeatherBox.js","constants/ActionTypes.js","actions/getWeather.js","actions/state.js","components/City.js","components/SearchFor.js","components/Main.js","reducers/weather.js","reducers/state.js","reducers/index.js","store.js","index.js","static/styles/WheatherBox.module.css"],"names":["module","exports","GET_WHEATHER_URL","GET_WHEATHER_BY_NAME_URL","GET_IMAGE_URL","APP_ID","UNITS","WheatherBox","props","deg","info","icon","weather","className","styles","block","top","city","name","location","sys","country","temp","alt","img","src","text","parseInt","main","bottom","humidity","wind","direct","speed","GET_WEATHER_FAILURE","SET_IDS","getWeatherSuccess","data","type","payload","list","addWeatherSuccess","getWeatherRequest","getWeatherFailure","error","getWeather","dispatch","getState","IDs","state","String_","forEach","id","index","fetch","method","then","res","json","catch","err","console","setIDs","addNewID","ID","indexOf","push","mapDispatchToProps","removeID","filter","elem","connect","span","remove","onClick","add","getWeatherByName","tempWeather","React","useState","timeOut","setTimeOut","input","useRef","wrap","header","to","backButton","searchLine","placeholder","onChange","clearInterval","timer","setTimeout","current","value","ref","content","Main","getWeather_","getWeatherByGPS_","getWeatherByGPS","this","weatherList","map","key","generateList","globalWrap","path","pageName","hoverButton","Component","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","enableHighAccuracy","maximumAge","timeout","initialState","loading","combineReducers","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5545802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalWrap\":\"Main_globalWrap__1xFvU\",\"wrap\":\"Main_wrap__3Pr8S\",\"header\":\"Main_header__3TeaQ\",\"pageName\":\"Main_pageName__1F0z2\",\"content\":\"Main_content__3M57R\",\"hoverButton\":\"Main_hoverButton__z5K4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"SearchFor_wrap__XVlIW\",\"header\":\"SearchFor_header__2eQ_H\",\"backButton\":\"SearchFor_backButton__BOq6H\",\"content\":\"SearchFor_content__oYFH1\",\"searchLine\":\"SearchFor_searchLine__2Wd7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"City_block__1x_su\",\"name\":\"City_name__lVQHG\",\"remove\":\"City_remove__3Aj6y\",\"add\":\"City_add__1qrdN\"};","export const GET_WHEATHER_URL = 'https://api.openweathermap.org/data/2.5/group';\n\nexport const GET_WHEATHER_BY_NAME_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nexport const GET_IMAGE_URL = 'http://openweathermap.org/img/wn/';\n\nexport const APP_ID = 'cabd487d8ae1c4affc6f6580bf9b0448';\n\nexport const UNITS = 'metric';","import React from 'react';\nimport styles from '../static/styles/WheatherBox.module.css';\nimport { GET_IMAGE_URL } from '../constants/helperConstant';\n\nexport function WheatherBox(props) {\n\tconst {\n\t\tinfo,\n\t} = props;\n\n\tconst getDirection = (deg) => {\n\t\tif (deg >= 315 && deg <= 45) {\n\t\t\treturn 'Северный';\n\t\t} else if (deg >= 45 && deg <= 135) {\n\t\t\treturn 'Западный';\n\t\t} else if (deg >= 135 && deg <= 225) {\n\t\t\treturn 'Южный';\n\t\t} else {\n\t\t\treturn 'Восточный';\n\t\t}\n\t};\n\n\tconst icon = info.weather[0].icon;\n\n\treturn (\n\t\t<div className={styles.block}>\n\t\t\t<div className={styles.top}>\n\t\t\t\t<div className={styles.city}>\n\t\t\t\t\t<span className={styles.name}>{info.name}</span>\n\t\t\t\t\t<span className={styles.location}>{info.sys.country}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.temp}>\n\t\t\t\t\t<img\n\t\t\t\t\t\talt={`${icon}.png`}\n\t\t\t\t\t\tclassName={styles.img} \n\t\t\t\t\t\tsrc={`${GET_IMAGE_URL}${icon}.png`}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className={styles.text}>\n\t\t\t\t\t\t{`${parseInt(info.main.temp)} C`}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.bottom}>\n\t\t\t\t{`${info.main.humidity}% | ${getDirection(info.wind.direct)} | ${info.wind.speed} m/s`}\n\t\t\t</div>\n\t\t</div>\n\t);\n}","export const GET_WEATHER_SUCCESS = '@@weather/GET_WEATHER_SUCCESS';\nexport const ADD_WEATHER_SUCCESS = '@@weather/ADD_WEATHER_SUCCESS';\nexport const GET_WEATHER_FAILURE = '@@weather/UGET_WEATHER_FAILUREPLOAD_CHAT_INFO';\nexport const GET_WEATHER_REQUEST = '@@weather/GET_WEATHER_START';\n\nexport const SET_IDS = '@@state/SET_IDS';","import {\n\tGET_WEATHER_SUCCESS,\n\tADD_WEATHER_SUCCESS,\n\tGET_WEATHER_FAILURE,\n\tGET_WEATHER_REQUEST,\n} from '../constants/ActionTypes';\n\nimport {\n\tGET_WHEATHER_BY_NAME_URL,\n\tGET_WHEATHER_URL,\n\tAPP_ID,\n\tUNITS,\n} from '../constants/helperConstant';\n\nimport { addNewID } from './state';\n\nconst getWeatherSuccess = (data) => ({\n\ttype: GET_WEATHER_SUCCESS,\n\tpayload: data.list,\n});\n\nconst addWeatherSuccess = (data) => ({\n\ttype: ADD_WEATHER_SUCCESS,\n\tpayload: data,\n});\n\nconst getWeatherRequest = () => ({\n\ttype: GET_WEATHER_REQUEST,\n});\n\nconst getWeatherFailure = (error) => ({\n\ttype: GET_WEATHER_FAILURE,\n\tpayload: error,\n});\n\nexport function getWeatherByGPS() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(getWeatherRequest());\n\n\t\tconst geoOptions = {\n\t\t\tenableHighAccuracy: true,\n\t\t\tmaximumAge: 30000,\n\t\t\ttimeout: 27000,\n\t\t};\n\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t(data) => {\n\t\t\t\tconst lat = data.coords.latitude;\n\t\t\t\tconst lon = data.coords.longitude;\n\n\t\t\t\tconst String_ = `\\\n\t\t\t\t\t${GET_WHEATHER_BY_NAME_URL}\\\n\t\t\t\t\t?lat=${lat}\\\n\t\t\t\t\t&lon=${lon}\\\n\t\t\t\t\t&appid=${APP_ID}\n\t\t\t\t`;\n\n\t\t\t\tfetch(String_, {\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\taddNewID(res.id)(dispatch, getState);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tdispatch(getWeatherFailure(err));\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tconsole.error,\n\t\t\tgeoOptions,\n\t\t);\n\t};\n}\n\nexport function getWeather() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(getWeatherRequest());\n\n\t\tconst IDs = getState().state.IDs;\n\n\t\tlet String_ = `${GET_WHEATHER_URL}?id=`;\n\n\t\tIDs.forEach((id, index) =>\t{\n\t\t\tif (index) { String_ += ','; }\n\t\t\tString_ += `${id}`\n\t\t});\n\n\t\tString_ = `${String_}&units=${UNITS}&appid=${APP_ID}`;\n\n\t\tfetch(String_, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tdispatch(getWeatherSuccess(res));\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tdispatch(getWeatherFailure(err));\n\t\t\t});\n\t};\n}\n\nexport function getWeatherByName(name) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(getWeatherRequest());\n\n\t\tconst String_ = `${GET_WHEATHER_BY_NAME_URL}?q=${name}&appid=${APP_ID}`;\n\n\t\tfetch(String_, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tdispatch(addWeatherSuccess(res));\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t\tdispatch(getWeatherFailure(err));\n\t\t\t})\n\t};\n}","import {\n\tSET_IDS,\n} from '../constants/ActionTypes';\n\nimport { getWeather } from './getWeather';\n\nconst setIDs = (IDs) => ({\n\ttype: SET_IDS,\n\tpayload: IDs,\n});\n\nexport function addNewID(ID) {\n\treturn (dispatch, getState) => {\n\t\tconst IDs = getState().state.IDs;\n\t\tif (IDs.indexOf(ID) === -1) {\n\t\t\tIDs.push(ID);\n\t\t\tdispatch(setIDs(IDs));\n\t\t\tgetWeather()(dispatch, getState);\n\t\t}\n\t};\n}\n\nexport function removeID(ID) {\n\treturn (dispatch, getState) => {\n\t\tlet IDs = getState().state.IDs;\n\t\tIDs = IDs.filter((elem) => elem !== ID);\n\t\tdispatch(setIDs(IDs));\n\t\tgetWeather()(dispatch, getState);\n\t};\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../static/styles/City.module.css';\n\nimport { addNewID, removeID } from '../actions/state';\n\nfunction City(props) {\n\tconst {\n\t\taddNewID,\n\t\tremoveID,\n\t\tname,\n\t\tID,\n\t\tIDs,\n\t} = props;\n\n\tlet span = <span\n\t\tclassName={styles.remove}\n\t\tonClick={() => { removeID(ID); }}\n\t>x</span>;\n\n\tif (IDs.indexOf(ID) === -1) {\n\t\tspan = <span\n\t\t\tclassName={styles.add}\n\t\t\tonClick={() => { addNewID(ID); }}\n\t\t>+</span>;\n\t}\n\n\treturn (\n\t\t<div className={styles.block}>\n\t\t\t<span className={styles.name}>{name}</span>\n\t\t\t{ span }\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state, props) => ({\n\tIDs: state.state.IDs,\n\t...props,\n}); \n\nconst mapDispatchToProps = {\n\taddNewID,\n\tremoveID,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps,\n)(City);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport styles from '../static/styles/SearchFor.module.css';\n\nimport City from './City';\n\nimport { getWeatherByName } from '../actions/getWeather';\n\nfunction SearchFor(props) {\n\tconst {\n\t\tgetWeatherByName,\n\t\ttempWeather,\n\t} = props;\n\n\tconst [timeOut, setTimeOut] = React.useState(null);\n\tconst input = React.useRef(null);\n\n\tconst onChange = () => {\n\t\tif (timeOut) { clearInterval(timeOut); }\n\t\tconst timer = setTimeout(() => {\n\t\t\tgetWeatherByName(input.current.value);\n\t\t}, 500);\n\t\tsetTimeOut(timer);\n\t}; \n\n\treturn (\n\t\t<div className={styles.wrap}>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<Link to='/'>\n\t\t\t\t\t<div className={styles.backButton}></div>\n\t\t\t\t</Link>\n\t\t\t\t<input \n\t\t\t\t\tclassName={styles.searchLine}\n\t\t\t\t\tplaceholder=\"Type a city name...\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tref={input}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={styles.content}>\n\t\t\t\t{ tempWeather.id && <City ID={tempWeather.id} name={tempWeather.name} /> }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = (state, props) => ({\n\ttempWeather: state.weather.tempWeather,\n\t...props,\n}); \n\nconst mapDispatchToProps = {\n\tgetWeatherByName,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps,\n)(SearchFor);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport styles from '../static/styles/Main.module.css';\n\nimport { WheatherBox } from './WeatherBox';\nimport SearchFor from './SearchFor';\n\nimport { getWeather, getWeatherByGPS } from '../actions/getWeather';\n\nclass Main extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.getWeather_ = props.getWeather;\n\t\tthis.getWeatherByGPS_ = props.getWeatherByGPS;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getWeather_();\n\t\tthis.getWeatherByGPS_();\n\t}\n\n\tgenerateList(weatherList) {\n\t\treturn weatherList.map((elem) => {\n\t\t\treturn <WheatherBox key={elem.id} info={elem} />;\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tweather,\n\t\t} = this.props;\n\n\t\tlet weatherList;\n\t\tif (weather) {\n\t\t\tweatherList = this.generateList(weather);\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className={styles.globalWrap}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/search'>\n\t\t\t\t\t\t\t<SearchFor />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t\t<div className={styles.wrap}>\n\t\t\t\t\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t\t\t\t\t<span className={styles.pageName}>\n\t\t\t\t\t\t\t\t\t\tManage city\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={styles.content}>\n\t\t\t\t\t\t\t\t\t{weatherList}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Link to='/search'>\n\t\t\t\t\t\t\t\t<div className={styles.hoverButton}>+</div>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, props) => ({\n\tweather: state.weather.list,\n\tIDs: state.state.IDs,\n\t...props,\n}); \n\nconst mapDispatchToProps = {\n\tgetWeather,\n\tgetWeatherByGPS,\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps,\n)(Main);\n\n","import {\n\tGET_WEATHER_SUCCESS,\n\tADD_WEATHER_SUCCESS,\n\tGET_WEATHER_FAILURE,\n\tGET_WEATHER_REQUEST,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n\tloading: false,\n\terror: null,\n\tlist: [],\n\ttempWeather: {}\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_WEATHER_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tcase GET_WEATHER_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t\tlist: action.payload,\n\t\t\t};\n\t\tcase ADD_WEATHER_SUCCESS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: null,\n\t\t\t\ttempWeather: {...action.payload}\n\t\t\t};\n\t\tcase GET_WEATHER_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import {\n\tSET_IDS,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n\tIDs: [\n\t\t703448,\n\t\t2643743,\n\t],\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_IDS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tIDs: [...action.payload],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport weather from './weather';\nimport state from './state';\n\nexport default combineReducers({\n\tstate,\n\tweather,\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools  } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools({})(applyMiddleware(thunk)));\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { render } from 'react-dom';\nimport Main from './components/Main';\nimport './static/styles/fonts.css';\nimport './static/styles/index.css';\nimport store from './store';\n\nrender(\n\t<Provider store={store}>\n\t\t<Main />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"WheatherBox_block__1598_\",\"top\":\"WheatherBox_top__t7jM_\",\"city\":\"WheatherBox_city__1Lgtk\",\"name\":\"WheatherBox_name__1xDrk\",\"location\":\"WheatherBox_location__2xyOF\",\"temp\":\"WheatherBox_temp__12_5O\",\"img\":\"WheatherBox_img__25_Nw\",\"text\":\"WheatherBox_text__pjD66\",\"bottom\":\"WheatherBox_bottom__X4XLd\"};"],"sourceRoot":""}